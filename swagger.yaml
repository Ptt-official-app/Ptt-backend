openapi: 3.0.0
info:
  title: 'PTT 後端系統協定'
  description: '最新版文件請見此處：https://docs.google.com/document/d/18DsZOyrlr5BIl2kKxZH7P2QxFLG02xL2SO0PzVHVY3k/'
  version: 0.0.1

servers:
  - url: https://pttapp.cc
  - url: http://localhost:8080
  - url: https://localhost:8080

components:
  securitySchemes:
    BasicAuth: # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    BoardObjectInResponse:
      type: object
      properties:
        type:
          type: string
          example: 'board'
        _bid:
          type: string
          description: '在BBS內部儲存空間的索引，參考用'
        board_id:
          type: string
          description: '看板ID'
    LineObjectInResponse:
      type: object
      properties:
        type:
          type: string
          example: 'line'
    FolderObjectInResponse:
      type: object
      properties:
        type:
          type: string
          example: 'folder'
        title:
          type: string
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/BoardObjectInResponse'
    BoardDetailsInResponse:
      type: object
      properties:
        id:
          type: string
          description: '看板或是分類ID'
        type:
          type: string
          description: '指示為看板或者是分類， board 代表看板，class 代表分類，回傳型別為字串。'
        title:
          type: string
          description: '看板標題'
        number_of_user:
          type: integer
          format: int64
          description: '看板使用者數量'
        moderators:
          description: '版主列表，回傳型別為字串陣列'
          type: array
          items:
            type: string
    PushRecord:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        ip_address:
          type: string
        text:
          type: string
        time:
          type: string
          format: date-time
    ArticleObjectInResponse:
      properties:
        filename:
          type: string
          description: '檔案名稱，Filename ，例如M.1161080752.A.241。'
        modified_time:
          type: string
          format: date-time
          description: '修改時間'
        recommend_count:
          type: integer
          format: int64
          description: '推文數'
        post_date:
          type: string
          format: date
          description: '發文時間，以01/02表示'
        title:
          type: string
          description: '文章標題'
        money:
          type: integer
          description: '文章稿費'
        aid:
          type: string
          description: '文章代碼(AID)，例如 #15DA-m91。'
        url:
          type: string
          description: '文章網址'
    UserPreferencesObjectInResponse:
      properties:
        favorite_no_highlight:
          type: string
        favorite_add_new:
          type: string
        friend:
          type: string
        board_sort:
          type: string
        ad_banner:
          type: string
        ad_banner_user_song:
          type: string
        dbcs_aware:
          type: string
        dbcs_no_interupting_escape:
          type: string
        dbcs_drop_repeat:
          type: string
        no_modification_mark:
          type: string
        colored_modification_mark:
          type: string
        default_backup:
          type: string
        new_angel_pager:
          type: string
        reject_outside_mail:
          type: string
        secure_login:
          type: string
        foreign:
          type: string
        live_right:
          type: string
        menu_lightbar:
          type: string
        cursor_ascii:
          type: string
        pager_ui:
          type: string

  parameters:
    UserIdParam: # <-- Arbitrary name for the definition that will be used to refer to it.
                 # Not necessarily the same as the parameter name.
      name: user_id
      in: path
      required: true
      description: '使用者 id'
      schema:
        type: string

paths:
  /v1/token:
    post:
      summary: 登入以取得 Access Token 。
      security:
        - BasicAuth: [ ]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                grant_type:
                  type: string
                  enum: ["password"]
              required:
                - username
                - password
                - grant_type
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: token
                  refresh_token:
                    type: string
                    example: token
                    description: "用來更新短效期的 access token，請參考 OAuth 2.0 標準 (RFC 6749)"
                  expires_in:
                    type: integer
                    example: 1612540800
                    description: "access token 的過期時效，以秒為單位，請參考 OAuth 2.0 標準 (RFC 6749)。"
                  token_type:
                    type: string
                    enum: ["bearer"]
                    description: "固定為 bearer"
      tags:
        - 使用者部分

  /v1/users/{user_id}/information:
    get:
      summary: '取得使用者資訊，包括上次上站位置等'
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user_id:
                        type: string
                        description: '使用者 id'
                      nickname:
                        type: string
                        description: '使用者暱稱'
                      realname:
                        type: string
                        description: '使用者真實姓名，僅本人可見  [需檢討可讀權限]'
                      number_of_login_days:
                        type: string
                        description: '上線日數'
                      number_of_posts:
                        type: integer
                        format: int64
                        description: '貼文次數'
                      number_of_badposts:
                        type: integer
                        format: int64
                        description: '劣文次數'
                      money:
                        type: integer
                        format: int64
                        description: '金錢數量，或稱 P幣數量，僅互加好友可見 [需檢討可讀權限]'
                      money_description:
                        type: string
                        description: '金錢描述，由後端設定的財富等級，以UTF-8中文表示'
                      last_login_time:
                        type: string
                        format: date-time
                        description: '上次上線時間，以時間方式表示'
                      last_login_ipv4:
                        type: string
                        description: '上次登入IP，原先固定欄位的 IPv4 IP，未來可能被棄置'
                      last_login_ip:
                        type: string
                        description: '上次登入IP，有可能顯示 IPv6 IP 的上線 IP'
                      last_login_country:
                        type: string
                        description: '上次登入國家'
                      mailbox_description:
                        type: string
                        description: '信箱狀態表示文字（延後實作）'
                      chess_status:
                        type: object
                        description: '棋類輸贏狀態表示（延後實作） five: 五子棋 chinese_chess: 中國象棋 conn6: 六子棋 go: 圍棋 dark: 暗棋'
                        properties:
                          five:
                            type: object
                            properties:
                              win:
                                type: integer
                                format: int64
                              lose:
                                type: integer
                                format: int64
                              tie:
                                type: integer
                                format: int64
                      plan:
                        type: object
                        description: '簽名檔，有可能被稱作計畫檔，原則上可能有16行'
                        properties:
                          raw:
                            type: string
                          text:
                            type: string
                          color_map:
                            type: string
      tags:
        - 使用者部分

  /v1/users/{user_id}/favorites:
    get:
      summary: '我的最愛列表'
      description: '使用者的我的最愛列表，原則上權限僅供取得使用者本人的最愛資料。解析此資料的成本較高，因此實作上會考慮帶上 Last Modified Header，請在第二次索取相同的資料時附上  。'
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          anyOf:
                            - $ref: '#/components/schemas/BoardObjectInResponse'
                            - $ref: '#/components/schemas/LineObjectInResponse'
                            - $ref: '#/components/schemas/FolderObjectInResponse'
      tags:
        - 使用者部分

    post:
      summary: '修改我的最愛項目'
      description: '新增，刪除，修改我的最愛項目，看板、分隔線或是資料夾'
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: [ 'modify_folder_title', 'modify_order', 'delete_favorite', 'add_favorite' ]
                position:
                  type: string
                  description: '要移動到的位置，如果該位置上已經有東西了，該位置以及後面的東西編號會直接增加，向後移動。如果沒指定或是指定為0會放在該層最後。 例如 2.1.0 會放在第二個項目的第一個項目中的最後面'
                type:
                  type: string
                  description: '項目類型 board: 看板 line: 分隔線 folder: 資料夾'
                board_id:
                  type: string
                title:
                  type: string
                fav_target:
                  type: string
                  description: '刪除我的最愛時的目標編號，以 1 開始。 如有資料夾以 . 做分隔，例如 2.1.3 代表第二個項目的第一個項目裡面的第三個項目'
                new_title:
                  type: string
              required:
                - action
                - position
                - type
                - board_id
                - title
                - fav_target
                - new_title
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          anyOf:
                            - $ref: '#/components/schemas/BoardObjectInResponse'
                            - $ref: '#/components/schemas/LineObjectInResponse'
                            - $ref: '#/components/schemas/FolderObjectInResponse'
      tags:
        - 使用者部分

  /v1/users/{user_id}/articles:
    get:
      summary: '該使用者的文章列表'
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      items:
                        type: array
                        items:
                          allOf:
                            - properties:
                                board_id:
                                  type: string
                                comment_count:
                                  type: integer
                                  format: int64
                                  description: '留言數'
                                owner:
                                  type: string
                            - $ref: '#/components/schemas/ArticleObjectInResponse'

      tags:
        - 使用者部分

  /v1/users/{user_id}/preferences:
    get:
      summary: '該使用者的偏好設定'
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                      $ref: '#/components/schemas/UserPreferencesObjectInResponse'

      tags:
        - 使用者部分

  /v1/boards:
    get:
      summary: '取得該使用者所有可見看板以及站長新增看板'
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          anyOf:
                            - $ref: '#/components/schemas/BoardDetailsInResponse'
      tags:
        - 看板部分

    post:
      summary: '開新看板'
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                board_id:
                  type: string
                category:
                  type: string
                title:
                  type: string
                settings:
                  type: array
                  items:
                    type: string
                moderators:
                  type: string
                read_settings:
                  type: array
                  items:
                    type: string
              required:
                - board_id
                - category
                - title
                - settings
                - moderators
                - read_settings
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                          description: 'entry_id'
      tags:
        - 看板部分

  /v1/boards/{board_id}/information:
    get:
      summary: '取得單個看板資訊'
      security:
        - BearerAuth: [ ]
      parameters:
        - name: board_id
          in: path
          required: true
          description: '看板 id'
          schema:
            type: string
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BoardDetailsInResponse'
      tags:
        - 看板部分

  /v1/classes/{class_id}:
    get:
      summary: '取得分類看板底下看板列表'
      security:
        - BearerAuth: [ ]
      parameters:
        - name: class_id
          in: path
          required: true
          description: '1 為分類看板主目錄'
          schema:
            type: string
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          anyOf:
                            - $ref: '#/components/schemas/BoardDetailsInResponse'
      tags:
        - 看板部分

  /v1/boards/{board_id}/articles:
    get:
      summary: '取得某看板文章列表'
      description: '取得某看板文章列表，同時使用多個條件時，以交集處理。'
      security:
        - BearerAuth: [ ]
      parameters:
        - name: board_id
          in: path
          required: true
          description: 'board_id'
          schema:
            type: string
        - name: author
          in: query
          description: '作者的user id, 字串完全比對'
          schema:
            type: string
        - name: title_contain
          in: query
          description: '標題'
          schema:
            type: string
        - name: recommend_count_value
          in: query
          description: '推文數數值'
          schema:
            type: integer
        - name: recommend_count_lt
          in: query
          description: '推文數數值小於'
          schema:
            type: integer
        - name: recommend_count_le
          in: query
          description: '推文數數值小於等於'
          schema:
            type: integer
        - name: recommend_count_eq
          in: query
          description: '推文數數值等於'
          schema:
            type: integer
        - name: recommend_count_gt
          in: query
          description: '推文數數值大於'
          schema:
            type: integer
        - name: recommend_count_ne
          in: query
          description: '推文數數值不等於'
          schema:
            type: integer
        - name: recommend_count_ge
          in: query
          description: '推文數數值大於等於'
          schema:
            type: integer
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/ArticleObjectInResponse'

      tags:
        - 文章列表部分

    post:
      summary: '發表文章'
      description: '目前支援輸入標題以及內文，內文部分暫時還沒有支援色碼'
      security:
        - BearerAuth: [ ]
      parameters:
        - name: board_id
          in: path
          required: true
          description: 'board_id'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: ['add_article']
                title:
                  type: string
                  description: '標題'
                article:
                  type: string
                  description: '內文'
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      raw:
                        type: string
                        description: 'raw_text'
                      parsed:
                        type: object
                        properties:
                          is_header_modied:
                            type: string
                          author_id:
                            type: string
                          author_name:
                            type: string
                          title:
                            type: string
                          post_time:
                            type: string
                            format: date-time
                          board_name:
                            type: string
                          text:
                            type: object
                            properties:
                              text:
                                type: string
                              color_map:
                                type: string
                          signature:
                            type: object
                            properties:
                              text:
                                type: string
                              color_map:
                                type: string
                          sender_info:
                            type: object
                            properties:
                              site:
                                type: string
                              ip_address:
                                type: string
                              ip_country:
                                type: string
                          edit_records:
                            type: array
                            items:
                              type: string
                          push_records:
                            type: array
                            items:
                              anyOf:
                                - $ref: '#/components/schemas/PushRecord'
      tags:
        - 文章列表部分

  /v1/boards/{board_id}/articles/{filename}:
    get:
      description: ''
      parameters:
        - name: board_id
          in: path
          required: true
          description: 'board_id'
          schema:
            type: string
        - name: filename
          in: path
          required: true
          description: 'filename'
          schema:
            type: string
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
      tags:
        - 單篇文章部分

    post:
      summary: '新增評論推文或是噓文；轉錄文章'
      description: ''
      security:
        - BearerAuth: [ ]
      parameters:
        - name: board_id
          in: path
          required: true
          description: 'board_id'
          schema:
            type: string
        - name: filename
          in: path
          required: true
          description: 'filename'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: [ 'append_comment', 'forward_article' ]
                type:
                  type: string
                  enum: [ '推', '噓', '→' ]
                  description: '推 or 噓文'
                text:
                  type: string
                  description: '內文'
                email:
                  type: string
                  description: '轉錄目標信箱'
                board:
                  type: string
                  description: '轉錄目標看板'
              required:
                - action
                - type
                - text
                - email
                - board
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      raw:
                        type: string
                      parsed:
                        type: object
                        properties:
                          is_header_modify:
                            type: string
                          author_id:
                            type: string
                          author_name:
                            type: string
                          title:
                            type: string
                          post_time:
                            type: string
                            format: date-time
                          board_name:
                            type: string
                          text:
                            type: object
                            properties:
                              text:
                                type: string
                              color_map:
                                type: string
                          signature:
                            type: object
                            properties:
                              text:
                                type: string
                              color_map:
                                type: string
                          sender_info:
                            type: object
                            properties:
                              site:
                                type: string
                              ip_address:
                                type: string
                              ip_country:
                                type: string
                          edit_records:
                            type: array
                            items:
                              type: string
                          push_records:
                            type: array
                            items:
                              anyOf:
                                - $ref: '#/components/schemas/PushRecord'
        '400':
          description: 'permission denied or parameters required'
      tags:
        - 單篇文章部分

  /v1/chat-rooms:
    get:
      description: ''
      responses:
        '200':
          description: 'ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
      tags:
        - 水球部分
